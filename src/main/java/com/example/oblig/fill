    /*
    public void start(Stage stage) throws IOException {

        Pane pane = new Pane();
        pane.setPrefSize(300, 300);
        pane.setStyle("-fx-background-color : black"); //Setter sort bakgrunn

        currentScoreLabel = new Label("Current Score: " + Integer.toString(currentScore));
        currentScoreLabel.setPrefWidth(150);
        currentScoreLabel.setFont(Font.font("Comic Sans MS", 18));
        highScoreLabel = new Label("High Score: " + Integer.toString(highScore));
        highScoreLabel.setFont(Font.font("Comic Sans MS", 18));
        highScoreLabel.setPrefWidth(150);



        HBox scoreinfo = new HBox(660, currentScoreLabel, highScoreLabel);
        scoreinfo.setStyle("-fx-background-color : yellow"); //Setter sort bakgrunn
        pane.getChildren().add(scoreinfo);
    }
    */

        Create a new JavaFX project in your development environment.
        Design the game's user interface using the built-in UI controls and layout managers provided by JavaFX. For example, you can use a GridPane to lay out the game board, and ImageViews to display the Pac-man and ghosts.
        Write code to handle user input and update the game's state. For example, you can use the KeyEvent class to handle keyboard input, and use variables to keep track of the Pac-man's position, the ghosts' positions, and the game's score.
        Add animation and graphics to the game using the JavaFX classes for 2D and 3D graphics. For example, you can use the TranslateTransition class to animate the Pac-man and ghosts moving across the game board, and the Circle class to draw the pellets.
        Write code to control the movement of the Pac-man and the ghosts. You can use a Timer or AnimationTimer to update the positions of the Pac-man and ghosts at regular intervals.
        Write code to handle collision detection and scoring. For example, you can use the contains() method to check if the Pac-man's position overlaps with a ghost's position, and update the score accordingly.
        Test and debug the game.
        Deploy the game to various devices.

          Map is 28x31 tiles.
            Paths are only 1 tile thick
            No sharp turns (i.e. intersections are separated by atleast 2 tiles).
            There are 1 or 2 tunnels
            No dead-ends.
            Only I, L, T, or + wall shapes are allowed, including the occasional rectangular wall.
            Any non-rectangular wall pieces must only be 2 tiles thick.




            AnimationTimer animationTimer = new AnimationTimer() {
                                    @Override
                                    public void handle(long timestamp) {
                                        if (karakter.pacman.getBoundsInParent().intersects(vegg.getBoundsInParent())) {
                                            System.out.println("kræsj");

                                            if (karakter.pacman.getTranslateX() < vegg.getTranslateX()) {
                                                karakter.pacman.setTranslateX(karakter.pacman.getTranslateX() - 5);
                                                System.out.println("Kræsj");
                                            }
                                            if (karakter.pacman.getTranslateX() > vegg.getTranslateX()) {
                                                karakter.pacman.setTranslateX(karakter.pacman.getTranslateX() + 5);
                                                System.out.println("Kræsj");
                                            }
                                            if (karakter.pacman.getTranslateY() < vegg.getTranslateY()) {
                                                karakter.pacman.setTranslateY(karakter.pacman.getTranslateY() - 5);
                                                System.out.println("Kræsj");
                                            }
                                            if (karakter.pacman.getTranslateY() > vegg.getTranslateY()) {
                                                karakter.pacman.setTranslateY(karakter.pacman.getTranslateY() + 5);
                                                System.out.println("Kræsj");
                                            }
                                        }
                                    }
                                };